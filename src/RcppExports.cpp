// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compute_basis_sp
Rcpp::List compute_basis_sp(const Rcpp::NumericMatrix& X, const Rcpp::NumericMatrix& cc, double w);
RcppExport SEXP _stcos_compute_basis_sp(SEXP XSEXP, SEXP ccSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_basis_sp(X, cc, w));
    return rcpp_result_gen;
END_RCPP
}
// compute_basis_spt
Rcpp::List compute_basis_spt(const Rcpp::NumericMatrix& X, const Rcpp::NumericMatrix& cc, double w_s, double w_t);
RcppExport SEXP _stcos_compute_basis_spt(SEXP XSEXP, SEXP ccSEXP, SEXP w_sSEXP, SEXP w_tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< double >::type w_s(w_sSEXP);
    Rcpp::traits::input_parameter< double >::type w_t(w_tSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_basis_spt(X, cc, w_s, w_t));
    return rcpp_result_gen;
END_RCPP
}
// eigs_sym
Rcpp::List eigs_sym(const arma::sp_mat& X, unsigned int k);
RcppExport SEXP _stcos_eigs_sym(SEXP XSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(eigs_sym(X, k));
    return rcpp_result_gen;
END_RCPP
}
// pinv
arma::mat pinv(const arma::mat& X);
RcppExport SEXP _stcos_pinv(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(pinv(X));
    return rcpp_result_gen;
END_RCPP
}
// sample_Gamma0_VAR1
arma::mat sample_Gamma0_VAR1(const arma::mat& A, const arma::mat& Sigma, long unsigned int R, long unsigned int burn);
RcppExport SEXP _stcos_sample_Gamma0_VAR1(SEXP ASEXP, SEXP SigmaSEXP, SEXP RSEXP, SEXP burnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< long unsigned int >::type R(RSEXP);
    Rcpp::traits::input_parameter< long unsigned int >::type burn(burnSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_Gamma0_VAR1(A, Sigma, R, burn));
    return rcpp_result_gen;
END_RCPP
}
// seq_int_ordered
Rcpp::IntegerVector seq_int_ordered(double from, double to);
RcppExport SEXP _stcos_seq_int_ordered(SEXP fromSEXP, SEXP toSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type from(fromSEXP);
    Rcpp::traits::input_parameter< double >::type to(toSEXP);
    rcpp_result_gen = Rcpp::wrap(seq_int_ordered(from, to));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_stcos_compute_basis_sp", (DL_FUNC) &_stcos_compute_basis_sp, 3},
    {"_stcos_compute_basis_spt", (DL_FUNC) &_stcos_compute_basis_spt, 4},
    {"_stcos_eigs_sym", (DL_FUNC) &_stcos_eigs_sym, 2},
    {"_stcos_pinv", (DL_FUNC) &_stcos_pinv, 1},
    {"_stcos_sample_Gamma0_VAR1", (DL_FUNC) &_stcos_sample_Gamma0_VAR1, 4},
    {"_stcos_seq_int_ordered", (DL_FUNC) &_stcos_seq_int_ordered, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_stcos(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
